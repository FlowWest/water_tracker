main:
  params: [args]
  steps:
  - init:
      assign:
      - project: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
      - zone: "us-central1-a"
      - instance: "bid4birds-compute-template-prod-1"
      - instanceTemplate: global/instanceTemplates/bid4birds-compute-template-prod
      - machineType: projects/bid4birds-337119/zones/us-central1-a/machineTypes/c2-standard-8
  - insert_machine:
      call: googleapis.compute.v1.instances.insert
      args:
        project: ${project}
        zone: ${zone}
        body:
          canIpForward: false
          confidentialInstanceConfig:
            enableConfidentialCompute: false
          deletionProtection: false
          description: ''
          disks:
          - autoDelete: true
            boot: true
            deviceName: bid4birds-compute-template-dev
            initializeParams:
              diskSizeGb: '50'
              diskType: projects/bid4birds-337119/zones/us-central1-a/diskTypes/pd-balanced
              labels: {}
              sourceImage: projects/cos-cloud/global/images/cos-85-13310-1416-18
            mode: READ_WRITE
            type: PERSISTENT
          displayDevice:
            enableDisplay: false
          guestAccelerators: []
          labels:
            container-vm: cos-85-13310-1416-18
          machineType: projects/bid4birds-337119/zones/us-central1-a/machineTypes/c2-standard-8
          metadata:
            items:
            - key: gce-container-declaration
              value: |-
                spec:
                  containers:
                  - name: bid4birds-compute-template-prod-1
                    image: us-central1-docker.pkg.dev/bid4birds-337119/b4b-compute/b4bcompute:latest
                    stdin: false
                    tty: false
                  restartPolicy: OnFailure
                # This container declaration format is not public API and may change without notice. Please
                # use gcloud command-line tool or Google Cloud Console to run Containers on Google Compute Engine.
          name: bid4birds-compute-template-prod-1
          networkInterfaces:
          - accessConfigs:
            - name: External NAT
              networkTier: PREMIUM
            subnetwork: projects/bid4birds-337119/regions/us-central1/subnetworks/default
          reservationAffinity:
            consumeReservationType: ANY_RESERVATION
          scheduling:
            automaticRestart: true
            onHostMaintenance: MIGRATE
            preemptible: false
            provisioningModel: STANDARD
          serviceAccounts:
          - email: 964299681615-compute@developer.gserviceaccount.com
            scopes:
            - https://www.googleapis.com/auth/servicecontrol
            - https://www.googleapis.com/auth/service.management.readonly
            - https://www.googleapis.com/auth/logging.write
            - https://www.googleapis.com/auth/monitoring.write
            - https://www.googleapis.com/auth/trace.append
            - https://www.googleapis.com/auth/devstorage.read_write
          shieldedInstanceConfig:
            enableIntegrityMonitoring: true
            enableSecureBoot: false
            enableVtpm: true
          tags:
            items: []
          zone: projects/bid4birds-337119/zones/us-central1-a
  # this is a very hacky approach I think? The "correct" approach would be implemented
  # using pub/sub messaging protocol.
  - wait:
      call: sys.sleep
      args:
        seconds: 18000 # wait 5 hours
  - delete_machine:
      call: googleapis.compute.v1.instances.delete
      args:
        instance: ${instance}
        project: ${project}
        zone: ${zone}
